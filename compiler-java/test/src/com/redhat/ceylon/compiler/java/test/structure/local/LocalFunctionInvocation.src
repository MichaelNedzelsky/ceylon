package com.redhat.ceylon.compiler.java.test.structure.local;

class LocalFunctionInvocation implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    LocalFunctionInvocation() {
    }
    
    class Inner implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
        
        Inner() {
            this.simple = 0L;
        }
        private final long simple;
        
        public final long getSimple() {
            return simple;
        }
        
        public final long getAttribute() {
            return 0L;
        }
        
        public final void setAttribute(final long attribute) {
        }
        
        public final long method(final long y) {
            return y;
        }
        
        private final long captureSimpleMember$0(final long x) {
            return getSimple() + x;
        }
        
        private final long captureGetterMember$0(final long x) {
            return getAttribute() + x;
        }
        
        private final long captureSetterMember$0(final long x) {
            setAttribute(x);
            (
                let
                {
                    long $ceylontmp$op$0 = getAttribute();
                    setAttribute($ceylontmp$op$0 + 1);
                }
                returning $ceylontmp$op$0;
            );
            (
                let
                {
                    long $ceylontmp$op$1 = getAttribute() + x;
                    setAttribute($ceylontmp$op$1);
                }
                returning $ceylontmp$op$1;
            );
            return x;
        }
        
        private final long captureMethod$0(final long x) {
            return method(x);
        }
        
        public final long memberCapture() {
            long z = 0L;
            z = captureSimpleMember$0(z);
            z = captureGetterMember$0(z);
            z = captureSetterMember$0(z);
            z = captureMethod$0(z);
            return z;
        }
        
        private final .com.redhat.ceylon.compiler.java.test.structure.local.LocalFunctionInvocation.Inner captureThis$1() {
            return this;
        }
        
        private final long captureSuper$1() {
            return super.hashCode();
        }
        
        private final .com.redhat.ceylon.compiler.java.test.structure.local.LocalFunctionInvocation captureOuter$1() {
            return .com.redhat.ceylon.compiler.java.test.structure.local.LocalFunctionInvocation.this;
        }
        
        public final long selfRefCapture() {
            long z = 0L;
            z = captureThis$1().hashCode();
            z = .ceylon.language.Integer.hashCode(captureSuper$1());
            z = captureOuter$1().hashCode();
            return z;
        }
        
        private final long captureLocalValue$2(final long localValue$2, final long y) {
            return y + localValue$2;
        }
        
        private final long captureLocalValueDeferred$2(final long localValueDeferred$3, final long y) {
            return y + localValueDeferred$3;
        }
        
        private final long getLocalGetterDeferred$2(final .com.redhat.ceylon.compiler.java.language.GetterLong getLocalGetterDeferred$2) {
            return getLocalGetterDeferred$2.get_();
        }
        
        private final long captureLocalDeferredGetter$2(final .com.redhat.ceylon.compiler.java.language.GetterLong localGetterDeferred$5, final long y) {
            return y + getLocalGetterDeferred$2(localGetterDeferred$5);
        }
        
        private final long getLocalGetterSetter$2() {
            return 0L;
        }
        
        private final void setLocalGetterSetter$2(final long localGetterSetter) {
        }
        
        private final long captureLocalGetterSetter$2(final long y) {
            setLocalGetterSetter$2(y);
            return getLocalGetterSetter$2();
        }
        
        private final long captureLocalFunction$2(final long localValue$6, final long y) {
            return captureLocalValue$2(localValue$6, y);
        }
        
        public final long localCapture() {
            long z = 0L;
            final long localValue = 0L;
            z = captureLocalValue$2(localValue, z);
            final long localValueDeferred;
            localValueDeferred = 0L;
            z = captureLocalValueDeferred$2(localValueDeferred, z);
            .com.redhat.ceylon.compiler.java.language.GetterLong localGetterDeferred$getter$_;
            localGetterDeferred$getter$_ = (
                let
                {
                    
                    final class localGetterDeferred$getter$_ implements .com.redhat.ceylon.compiler.java.language.GetterLong {
                        
                        private localGetterDeferred$getter$_() {
                        }
                        
                        public long get_() {
                            return 0L;
                        }
                    }
                }
                returning new localGetterDeferred$getter$_();
            );
            z = captureLocalDeferredGetter$2(localGetterDeferred$getter$_, z);
            z = captureLocalGetterSetter$2(z);
            z = captureLocalFunction$2(localValue, z);
            return z;
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.local.LocalFunctionInvocation.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.local.LocalFunctionInvocation.Inner.class));
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.local.LocalFunctionInvocation();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.local.LocalFunctionInvocation.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.local.LocalFunctionInvocation.class);
}
interface Foo {
    
    public .com.redhat.ceylon.compiler.java.test.structure.local.Foo$impl $com$redhat$ceylon$compiler$java$test$structure$local$Foo$impl();
    
    public void m(final .ceylon.language.Callable<? extends .ceylon.language.Integer> functional);
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.local.Foo.class);
}
final class Foo$impl {
    
    Foo$impl(.com.redhat.ceylon.compiler.java.test.structure.local.Foo $this) {
        this.$this = $this;
    }
    private final .com.redhat.ceylon.compiler.java.test.structure.local.Foo $this;
    
    private final long local$0(final .ceylon.language.Callable<? extends .ceylon.language.Integer> functional$7) {
        return functional$7.$call$().longValue();
    }
    
    public void m(final .ceylon.language.Callable<? extends .ceylon.language.Integer> functional) {
        local$0(functional);
    }
}