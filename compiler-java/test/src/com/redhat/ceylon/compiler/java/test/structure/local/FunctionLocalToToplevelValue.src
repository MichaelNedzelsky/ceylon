package com.redhat.ceylon.compiler.java.test.structure.local;

final class functionLocalToToplevelValue_ {
    
    private functionLocalToToplevelValue_() {
    }
    
    private static final void local$1() {
    }
    
    private static final void local$0() {
    }
    
    private static final long localCapture$2(final long x$1) {
        return x$1 + 1L;
    }
    
    private static final long localVariableCapture$2(final .com.redhat.ceylon.compiler.java.language.VariableBoxLong y$2) {
        y$2.ref = 1L;
        (
            let
            {
                long $ceylontmp$op$3 = y$2.ref;
                y$2.ref = $ceylontmp$op$3 + 1;
            }
            returning $ceylontmp$op$3;
        );
        (
            let
            {
                long $ceylontmp$op$4 = y$2.ref + 1L;
                y$2.ref = $ceylontmp$op$4;
            }
            returning $ceylontmp$op$4;
        );
        return y$2.ref;
    }
    
    private static final long transitiveCapture$2(final .com.redhat.ceylon.compiler.java.language.VariableBoxLong y$5, final long x$6) {
        return localVariableCapture$2(y$5) + localCapture$2(x$6);
    }
    
    private static final <V, W>long nested$3(final long x$8, final V v$9, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$V, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$W, final W w) {
        return x$8 + v$9.hashCode() + w.hashCode();
    }
    
    private static final <V>long nesting$2(final long x$7, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$V, final V v) {
        return nested$3(x$7, v, $reified$V, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.instance(1L));
    }
    
    private static final long defaultedParameters$2(final long i) {
        return (
            let
            {
                long $ceylontmp$j$10 = .com.redhat.ceylon.compiler.java.test.structure.local.functionLocalToToplevelValue_.defaultedParameters$2$j(i);
            }
            returning defaultedParameters$2(i, $ceylontmp$j$10);
        );
    }
    
    private static final long defaultedParameters$2$j(final long i) {
        return i;
    }
    
    private static final long defaultedParameters$2(final long i, final long j) {
        return i + j;
    }
    
    private static final void local$7() {
    }
    
    private static final void local$6() {
    }
    
    private static final long localCapture$8(final long x$14) {
        return x$14 + 1L;
    }
    
    private static final long localVariableCapture$8(final .com.redhat.ceylon.compiler.java.language.VariableBoxLong y$15) {
        y$15.ref = 1L;
        (
            let
            {
                long $ceylontmp$op$16 = y$15.ref;
                y$15.ref = $ceylontmp$op$16 + 1;
            }
            returning $ceylontmp$op$16;
        );
        (
            let
            {
                long $ceylontmp$op$17 = y$15.ref + 1L;
                y$15.ref = $ceylontmp$op$17;
            }
            returning $ceylontmp$op$17;
        );
        return y$15.ref;
    }
    
    private static final long transitiveCapture$8(final .com.redhat.ceylon.compiler.java.language.VariableBoxLong y$18, final long x$19) {
        return localVariableCapture$8(y$18) + localCapture$8(x$19);
    }
    
    private static final <V, W>long nested$9(final long x$21, final V v$22, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$V, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$W, final W w) {
        return x$21 + v$22.hashCode() + w.hashCode();
    }
    
    private static final <V>long nesting$8(final long x$20, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$V, final V v) {
        return nested$9(x$20, v, $reified$V, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.instance(1L));
    }
    
    private static final long defaultedParameters$8(final long i) {
        return (
            let
            {
                long $ceylontmp$j$23 = .com.redhat.ceylon.compiler.java.test.structure.local.functionLocalToToplevelValue_.defaultedParameters$8$j(i);
            }
            returning defaultedParameters$8(i, $ceylontmp$j$23);
        );
    }
    
    private static final long defaultedParameters$8$j(final long i) {
        return i;
    }
    
    private static final long defaultedParameters$8(final long i, final long j) {
        return i + j;
    }
    
    private static final .java.lang.Object deferred$8(final .ceylon.language.Callable<? extends .java.lang.Object> deferred$8, final long x$26) {
        return (
            let
            {
                long $ceylontmp$i$27 = .com.redhat.ceylon.compiler.java.test.structure.local.functionLocalToToplevelValue_.deferred$8$i(x$26);
            }
            returning deferred$8(deferred$8, x$26, $ceylontmp$i$27);
        );
    }
    
    private static final long deferred$8$i(final long x$28) {
        return x$28;
    }
    
    private static final .java.lang.Object deferred$8(final .ceylon.language.Callable<? extends .java.lang.Object> deferred$8, final long x$29, final long i) {
        if (deferred$8 == null) throw new .com.redhat.ceylon.compiler.java.language.UninitializedMethodError(); else return deferred$8.$call$(.ceylon.language.Integer.instance(i));
    }
    
    public static long get_() {
        final long x = 0L;
        .java.lang.Object ref = null;
        if (1L + 1L == 2L) {
            local$0();
            ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
                
                @.java.lang.Override
                public .java.lang.Object $call$() {
                    return (
                        let
                        {
                            local$0();
                        }
                        returning null;
                    );
                }
            };
        } else {
            local$1();
            ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
                
                @.java.lang.Override
                public .java.lang.Object $call$() {
                    return (
                        let
                        {
                            local$1();
                        }
                        returning null;
                    );
                }
            };
        }
        localCapture$2(x);
        ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Integer()", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                return .ceylon.language.Integer.instance(localCapture$2(x));
            }
        };
        final .com.redhat.ceylon.compiler.java.language.VariableBoxLong y = new .com.redhat.ceylon.compiler.java.language.VariableBoxLong(0L);
        localVariableCapture$2(y);
        ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Integer()", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                return .ceylon.language.Integer.instance(localVariableCapture$2(y));
            }
        };
        transitiveCapture$2(y, x);
        ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Integer()", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                return .ceylon.language.Integer.instance(transitiveCapture$2(y, x));
            }
        };
        nesting$2(x, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.instance(1L));
        ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), "Integer(String)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final .ceylon.language.String $ceylontmp$v = (.ceylon.language.String)$param$0;
                return .ceylon.language.Integer.instance(nesting$2(x, .ceylon.language.String.$TypeDescriptor$, $ceylontmp$v));
            }
        };
        defaultedParameters$2(0L);
        defaultedParameters$2(0L, 1L);
        (
            let
            {
                long arg$11$0 = 0L;
                long arg$11$1 = .com.redhat.ceylon.compiler.java.test.structure.local.functionLocalToToplevelValue_.defaultedParameters$2$j(arg$11$0);
            }
            returning defaultedParameters$2(arg$11$0, arg$11$1);
        );
        (
            let
            {
                long arg$12$1 = 1L;
                long arg$12$0 = 0L;
            }
            returning defaultedParameters$2(arg$12$0, arg$12$1);
        );
        ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Empty.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$))), "Integer(Integer, Integer=)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long $ceylontmp$i = ((.ceylon.language.Integer)$param$0).longValue();
                return .ceylon.language.Integer.instance(defaultedParameters$2($ceylontmp$i));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long $ceylontmp$i = ((.ceylon.language.Integer)$param$0).longValue();
                final long $ceylontmp$j = ((.ceylon.language.Integer)$param$1).longValue();
                return .ceylon.language.Integer.instance(defaultedParameters$2($ceylontmp$i, $ceylontmp$j));
            }
        };
        return 0L;
    }
    
    public static void set_(final long functionLocalToToplevelValue) {
        final long x = 0L;
        .java.lang.Object ref = null;
        if (1L + 1L == 2L) {
            local$6();
            ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
                
                @.java.lang.Override
                public .java.lang.Object $call$() {
                    return (
                        let
                        {
                            local$6();
                        }
                        returning null;
                    );
                }
            };
        } else {
            local$7();
            ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
                
                @.java.lang.Override
                public .java.lang.Object $call$() {
                    return (
                        let
                        {
                            local$7();
                        }
                        returning null;
                    );
                }
            };
        }
        localCapture$8(x);
        ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Integer()", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                return .ceylon.language.Integer.instance(localCapture$8(x));
            }
        };
        final .com.redhat.ceylon.compiler.java.language.VariableBoxLong y = new .com.redhat.ceylon.compiler.java.language.VariableBoxLong(0L);
        localVariableCapture$8(y);
        ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Integer()", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                return .ceylon.language.Integer.instance(localVariableCapture$8(y));
            }
        };
        transitiveCapture$8(y, x);
        ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Integer()", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                return .ceylon.language.Integer.instance(transitiveCapture$8(y, x));
            }
        };
        nesting$8(x, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.instance(1L));
        ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), "Integer(String)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final .ceylon.language.String $ceylontmp$v = (.ceylon.language.String)$param$0;
                return .ceylon.language.Integer.instance(nesting$8(x, .ceylon.language.String.$TypeDescriptor$, $ceylontmp$v));
            }
        };
        defaultedParameters$8(0L);
        defaultedParameters$8(0L, 1L);
        (
            let
            {
                long arg$24$0 = 0L;
                long arg$24$1 = .com.redhat.ceylon.compiler.java.test.structure.local.functionLocalToToplevelValue_.defaultedParameters$8$j(arg$24$0);
            }
            returning defaultedParameters$8(arg$24$0, arg$24$1);
        );
        (
            let
            {
                long arg$25$1 = 1L;
                long arg$25$0 = 0L;
            }
            returning defaultedParameters$8(arg$25$0, arg$25$1);
        );
        ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Empty.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$))), "Integer(Integer, Integer=)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long $ceylontmp$i = ((.ceylon.language.Integer)$param$0).longValue();
                return .ceylon.language.Integer.instance(defaultedParameters$8($ceylontmp$i));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long $ceylontmp$i = ((.ceylon.language.Integer)$param$0).longValue();
                final long $ceylontmp$j = ((.ceylon.language.Integer)$param$1).longValue();
                return .ceylon.language.Integer.instance(defaultedParameters$8($ceylontmp$i, $ceylontmp$j));
            }
        };
        final .ceylon.language.Callable<? extends .java.lang.Object> deferred$8;
        if (1L + 1L == 2L) {
            deferred$8 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), "Integer(Integer)", (short)-1){
                
                @.java.lang.Override
                public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                    final long i = ((.ceylon.language.Integer)$param$0).longValue();
                    return .ceylon.language.Integer.instance(i);
                }
            };
            
            class X implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
                
                X() {
                    deferred$8(deferred$8, x, x);
                    deferred$8(deferred$8, x);
                    (
                        let
                        {
                            long arg$31$0 = x;
                        }
                        returning deferred$8(deferred$8, x, arg$31$0);
                    );
                }
                
                @.java.lang.Override
                public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                    return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(X.class);
                }
            }
        } else {
            deferred$8 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), "Integer(Integer)", (short)-1){
                
                @.java.lang.Override
                public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                    final long i = ((.ceylon.language.Integer)$param$0).longValue();
                    return .ceylon.language.Integer.instance(i);
                }
            };
        }
        deferred$8(deferred$8, x, 1L);
        deferred$8(deferred$8, x);
        (
            let
            {
                long arg$32$0 = 1L;
            }
            returning deferred$8(deferred$8, x, arg$32$0);
        );
        ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Empty.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Tuple.class, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$)), "Anything(Integer=)", (short)-1){
            
            @.java.lang.Override
            public .java.lang.Object $call$() {
                return deferred$8(deferred$8, x);
            }
            
            @.java.lang.Override
            public .java.lang.Object $call$(final .java.lang.Object $param$0) {
                final long $ceylontmp$i = ((.ceylon.language.Integer)$param$0).longValue();
                return deferred$8(deferred$8, x, $ceylontmp$i);
            }
        };
    }
}