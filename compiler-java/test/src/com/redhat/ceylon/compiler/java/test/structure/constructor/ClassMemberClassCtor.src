package com.redhat.ceylon.compiler.java.test.structure.constructor;

class ClassMemberClassCtor implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    ClassMemberClassCtor() {
    }
    
    public static final class Member$Other {
        
        private Member$Other() {
        }
    }
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member$Other Member$Other = null;
    
    class Member implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
        
        public Member(final long i) {
        }
        
        public Member(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member$Other $name$, final long i) {
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member.class));
        }
    }
    
    public static final class SharedMember$Other {
        
        private SharedMember$Other() {
        }
    }
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember$Other SharedMember$Other = null;
    
    public class SharedMember implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
        
        public SharedMember(final long i) {
        }
        
        public SharedMember(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember$Other $name$, final long i) {
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember.class));
        }
    }
    
    private final void use$priv$(final .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor other) {
        final long i = 0L;
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member(i);
        (
            let
            {
                long arg$0$0 = 1L;
            }
            returning new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member(arg$0$0);
        );
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member(i);
        (
            let
            {
                long arg$1$0 = 1L;
            }
            returning new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member(arg$1$0);
        );
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member$Other, i);
        (
            let
            {
                long arg$2$0 = 1L;
            }
            returning new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member$Other, arg$2$0);
        );
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember(i);
        (
            let
            {
                long arg$3$0 = 1L;
            }
            returning new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember(arg$3$0);
        );
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember(i);
        (
            let
            {
                long arg$4$0 = 1L;
            }
            returning new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember(arg$4$0);
        );
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember$Other, i);
        (
            let
            {
                long arg$5$0 = 1L;
            }
            returning new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember$Other, arg$5$0);
        );
        this.new Member(i);
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor arg$6$callable$ = this;
                long arg$6$0 = 1L;
            }
            returning arg$6$callable$.new Member(arg$6$0);
        );
        this.new Member(i);
        (
            let
            {
                long arg$7$0 = 1L;
            }
            returning this.new Member(arg$7$0);
        );
        this.new Member(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member$Other, i);
        (
            let
            {
                long arg$8$0 = 1L;
            }
            returning this.new Member(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member$Other, arg$8$0);
        );
        this.new SharedMember(i);
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor arg$9$callable$ = this;
                long arg$9$0 = 1L;
            }
            returning arg$9$callable$.new SharedMember(arg$9$0);
        );
        this.new SharedMember(i);
        (
            let
            {
                long arg$10$0 = 1L;
            }
            returning this.new SharedMember(arg$10$0);
        );
        this.new SharedMember(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember$Other, i);
        (
            let
            {
                long arg$11$0 = 1L;
            }
            returning this.new SharedMember(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember$Other, arg$11$0);
        );
        other.new Member(i);
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor arg$12$callable$ = other;
                long arg$12$0 = 1L;
            }
            returning arg$12$callable$.new Member(arg$12$0);
        );
        other.new Member(i);
        (
            let
            {
                long arg$13$0 = 1L;
            }
            returning other.new Member(arg$13$0);
        );
        other.new Member(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member$Other, i);
        (
            let
            {
                long arg$14$0 = 1L;
            }
            returning other.new Member(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.Member$Other, arg$14$0);
        );
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 7)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class useClassMemberClassCtor_ {
    
    private useClassMemberClassCtor_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Anything")
    static void useClassMemberClassCtor(@.com.redhat.ceylon.compiler.java.metadata.Name("other")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.structure.constructor::ClassMemberClassCtor")
    final .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor other) {
        final long i = 0L;
        other.new SharedMember(i);
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor arg$15$callable$ = other;
                long arg$15$0 = 1L;
            }
            returning arg$15$callable$.new SharedMember(arg$15$0);
        );
        other.new SharedMember(i);
        (
            let
            {
                long arg$16$0 = 1L;
            }
            returning other.new SharedMember(arg$16$0);
        );
        other.new SharedMember(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember$Other, i);
        (
            let
            {
                long arg$17$0 = 1L;
            }
            returning other.new SharedMember(.com.redhat.ceylon.compiler.java.test.structure.constructor.ClassMemberClassCtor.SharedMember$Other, arg$17$0);
        );
    }
}