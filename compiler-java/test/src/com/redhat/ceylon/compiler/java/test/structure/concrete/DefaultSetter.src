package com.redhat.ceylon.compiler.java.test.structure.concrete;

interface DefaultSetter$I {
    
    public abstract long getAFormal();
    
    public abstract void setAFormal(final long aFormal);
    
    public long getADefault();
    
    public void setADefault(final long aDefault);
}
interface DefaultSetter$ISub extends .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$I {
    
    @.java.lang.Override
    public long getAFormal();
    
    @.java.lang.Override
    public void setAFormal(final long aFormal);
    
    public long inc();
}
class DefaultSetter implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    DefaultSetter() {
        this.a = 0L;
    }
    private long a;
    
    private final long getA$priv$() {
        return a;
    }
    
    private final void setA$priv$(final long a) {
        this.a = a;
    }
    
    final class I$0$impl {
        
        private I$0$impl() {
        }
        
        static final long getADefault(.com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$I $this, final .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter $outer$DefaultSetter) {
            return $outer$DefaultSetter.getA$priv$();
        }
        
        static final void setADefault(.com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$I $this, final .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter $outer$DefaultSetter, final long aDefault) {
            $outer$DefaultSetter.setA$priv$(aDefault);
        }
    }
    
    abstract class Abstract$0 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$I {
        
        Abstract$0() {
        }
        
        @.java.lang.Override
        public long getADefault() {
            return .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.I$0$impl.getADefault(this, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.this);
        }
        
        @.java.lang.Override
        public void setADefault(final long aDefault) {
            .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.I$0$impl.setADefault(this, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.this, aDefault);
        }
        
        @.java.lang.Override
        public long getAFormal() {
            return getADefault();
        }
        
        @.java.lang.Override
        public void setAFormal(final long aFormal) {
            setADefault(aFormal);
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.Abstract$0.class));
        }
    }
    
    class Concrete$0 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$I {
        
        Concrete$0() {
        }
        
        @.java.lang.Override
        public long getADefault() {
            return .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.I$0$impl.getADefault(this, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.this);
        }
        
        @.java.lang.Override
        public void setADefault(final long aDefault) {
            .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.I$0$impl.setADefault(this, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.this, aDefault);
        }
        
        @.java.lang.Override
        public final long getAFormal() {
            return 1L;
        }
        
        @.java.lang.Override
        public final void setAFormal(final long aFormal) {
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.Concrete$0.class));
        }
    }
    
    final class ISub$0$impl {
        
        private ISub$0$impl() {
        }
        
        static final long getAFormal(.com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$ISub $this, final .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$I $outer$I, final .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter $outer$DefaultSetter) {
            return $this.getADefault();
        }
        
        static final void setAFormal(.com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$ISub $this, final .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$I $outer$I, final .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter $outer$DefaultSetter, final long aFormal) {
            $this.setADefault(aFormal);
        }
        
        static long inc(final .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$ISub $this) {
            return (
                let
                {
                    long $ceylontmp$op$0 = $this.getAFormal();
                    $this.setAFormal($ceylontmp$op$0 + 1);
                }
                returning $ceylontmp$op$0;
            );
        }
    }
    
    class Sub$0 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$ISub {
        
        Sub$0() {
        }
        
        @.java.lang.Override
        public long getAFormal() {
            return .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.ISub$0$impl.getAFormal(this, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$I.this, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.this);
        }
        
        @.java.lang.Override
        public void setAFormal(final long aFormal) {
            .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.ISub$0$impl.setAFormal(this, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter$I.this, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.this, aFormal);
        }
        
        @.java.lang.Override
        public final long inc() {
            return .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.ISub$0$impl.inc(this);
        }
        
        @.java.lang.Override
        public long getADefault() {
            return .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.I$0$impl.getADefault(this, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.this);
        }
        
        @.java.lang.Override
        public void setADefault(final long aDefault) {
            .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.I$0$impl.setADefault(this, .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.this, aDefault);
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.Sub$0.class));
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.DefaultSetter.class);
}