package com.redhat.ceylon.compiler.java.test.expression.invoke;

class NamedArgumentWithIterable implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    NamedArgumentWithIterable() {
    }
    
    private final void m$priv$(final long a, final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> b) {
    }
    
    private final void defaulted$priv$(final long a) {
        (
            let
            {
                .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> $ceylontmp$b$0 = defaulted$b(a);
                defaulted$priv$(a, $ceylontmp$b$0);
            }
            returning null;
        );
    }
    
    private final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> defaulted$b(final long a) {
        return .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.Integer.instance(1L)});
    }
    
    private final void defaulted$priv$(final long a, final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> b) {
    }
    
    private final void m2$priv$(final .java.lang.Throwable a, final .ceylon.language.Iterable<? extends .java.lang.Throwable, ? extends .java.lang.Object> b) {
    }
    
    private final void m3$priv$(final .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable a, final .ceylon.language.Iterable<? extends .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable, ? extends .java.lang.Object> b) {
    }
    
    private final void invoke$priv$() {
        (
            let
            {
                long arg$1$0 = 1L;
                .ceylon.language.Iterable arg$1$1 = (.ceylon.language.Iterable).ceylon.language.empty_.get_();
                m$priv$(arg$1$0, arg$1$1);
            }
            returning null;
        );
        (
            let
            {
                long arg$2$0 = 1L;
                .ceylon.language.Iterable arg$2$1 = .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        .ceylon.language.Integer.instance(2L),
                        .ceylon.language.Integer.instance(3L),
                        .ceylon.language.Integer.instance(4L)});
                m$priv$(arg$2$0, arg$2$1);
            }
            returning null;
        );
        (
            let
            {
                long arg$3$0 = 1L;
                .ceylon.language.Iterable arg$3$1 = new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Sequential<? extends .ceylon.language.Integer>>>(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        .ceylon.language.Integer.instance(4L),
                        .ceylon.language.Integer.instance(5L)});
                m$priv$(arg$3$0, arg$3$1);
            }
            returning null;
        );
        (
            let
            {
                long arg$4$0 = 1L;
                .ceylon.language.Iterable arg$4$1 = .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        .ceylon.language.Integer.instance(4L),
                        .ceylon.language.Integer.instance(5L)});
                m$priv$(arg$4$0, arg$4$1);
            }
            returning null;
        );
        (
            let
            {
                long arg$5$0 = 1L;
                .ceylon.language.Iterable arg$5$1 = .com.redhat.ceylon.compiler.java.language.ArrayIterable.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Sequential<? extends .ceylon.language.Integer>>>(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        .ceylon.language.Integer.instance(4L),
                        .ceylon.language.Integer.instance(5L)}), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L));
                m$priv$(arg$5$0, arg$5$1);
            }
            returning null;
        );
        (
            let
            {
                long arg$6$0 = 1L;
                .ceylon.language.Iterable arg$6$1 = .com.redhat.ceylon.compiler.java.language.ArrayIterable.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        .ceylon.language.Integer.instance(4L),
                        .ceylon.language.Integer.instance(5L)}), .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L));
                m$priv$(arg$6$0, arg$6$1);
            }
            returning null;
        );
        (
            let
            {
                long arg$7$0 = 1L;
                .ceylon.language.Iterable arg$7$1 = new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
                    
                    public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                        return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                            {
                                $iterator$0 = .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.Integer.instance(2L)}).iterator();
                            }
                            private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                            private .ceylon.language.Integer i;
                            private boolean i$exhausted$;
                            
                            private final boolean i() {
                                final .java.lang.Object $ceylontmp$item$8 = $iterator$0.next();
                                i$exhausted$ = $ceylontmp$item$8 == .ceylon.language.finished_.get_();
                                if (i$exhausted$) {
                                    return false;
                                } else {
                                    i = (.ceylon.language.Integer)$ceylontmp$item$8;
                                    return true;
                                }
                            }
                            
                            public final .java.lang.Object next() {
                                if (this.i()) {
                                    final .ceylon.language.Integer i = this.i;
                                    return i;
                                } else return .ceylon.language.finished_.get_();
                            }
                        };
                    }
                };
                m$priv$(arg$7$0, arg$7$1);
            }
            returning null;
        );
        (
            let
            {
                long arg$9$0 = 1L;
                .ceylon.language.Iterable arg$9$1 = .com.redhat.ceylon.compiler.java.language.ArrayIterable.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
                    
                    public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                        return new .com.redhat.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                            {
                                $iterator$0 = .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.Integer.instance(4L)}).iterator();
                            }
                            private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                            private .ceylon.language.Integer i;
                            private boolean i$exhausted$;
                            
                            private final boolean i() {
                                final .java.lang.Object $ceylontmp$item$10 = $iterator$0.next();
                                i$exhausted$ = $ceylontmp$item$10 == .ceylon.language.finished_.get_();
                                if (i$exhausted$) {
                                    return false;
                                } else {
                                    i = (.ceylon.language.Integer)$ceylontmp$item$10;
                                    return true;
                                }
                            }
                            
                            public final .java.lang.Object next() {
                                if (this.i()) {
                                    final .ceylon.language.Integer i = this.i;
                                    return i;
                                } else return .ceylon.language.finished_.get_();
                            }
                        };
                    }
                }, .ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L));
                m$priv$(arg$9$0, arg$9$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable arg$11$argthis$ = this;
                long arg$11$0 = 1L;
                .ceylon.language.Iterable arg$11$1 = arg$11$argthis$.defaulted$b(arg$11$0);
                defaulted$priv$(arg$11$0, arg$11$1);
            }
            returning null;
        );
        final .java.lang.Throwable e = new .ceylon.language.Exception(.ceylon.language.String.instance(""), null);
        (
            let
            {
                .java.lang.Throwable arg$12$0 = e;
                .ceylon.language.Iterable arg$12$1 = .ceylon.language.ArraySequence.<.java.lang.Throwable>instance(.ceylon.language.Exception.$TypeDescriptor$, new .java.lang.Object[]{
                        e,
                        e,
                        e});
                m2$priv$(arg$12$0, arg$12$1);
            }
            returning null;
        );
        (
            let
            {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable arg$13$0 = this;
                .ceylon.language.Iterable arg$13$1 = .ceylon.language.ArraySequence.<.com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable>instance(.com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable.$TypeDescriptor$, new .java.lang.Object[]{
                        this,
                        this,
                        this});
                m3$priv$(arg$13$0, arg$13$1);
            }
            returning null;
        );
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithIterable.class);
}