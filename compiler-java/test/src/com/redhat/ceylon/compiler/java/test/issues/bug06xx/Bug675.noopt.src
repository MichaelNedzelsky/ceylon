package com.redhat.ceylon.compiler.java.test.issues.bug06xx;

public final class bug675_ {
    
    private bug675_() {
    }
    
    public static <Element>.ceylon.language.Iterable<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends Element>, ? extends .java.lang.Object> bug675(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element) {
        return (
            let
            {
                .ceylon.language.Sequential<? extends Element> $ceylontmp$elements$0 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning bug675($reified$Element, $ceylontmp$elements$0);
        );
    }
    
    public static <Element>.ceylon.language.Iterable<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends Element>, ? extends .java.lang.Object> bug675(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element, final .ceylon.language.Sequential<? extends Element> elements) {
        .java.lang.Object elem$1;
        .ceylon.language.Iterator<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Integer>> k$iterator$$2 = .com.redhat.ceylon.compiler.java.test.issues.bug06xx.bug675_.<.ceylon.language.Integer>bug675(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L)})).iterator();
        while (!((elem$1 = k$iterator$$2.next()) instanceof .ceylon.language.Finished)) {
            final long k = ((.ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Integer>)elem$1).getKey().longValue();
            final long v = ((.ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Integer>)elem$1).getItem().longValue();
        }
        return elements.getIndexed();
    }
}