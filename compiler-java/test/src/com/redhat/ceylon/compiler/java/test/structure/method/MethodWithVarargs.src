package com.redhat.ceylon.compiler.java.test.structure.method;

class MethodWithVarargs implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    MethodWithVarargs() {
    }
    
    public final void f1() {
        (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$ns$0 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                f1($ceylontmp$ns$0);
            }
            returning null;
        );
    }
    
    public final void f1(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> ns) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$3 = ns;
        final boolean isArraySequence$4 = iterable$3 instanceof .ceylon.language.ArraySequence;
        .java.lang.Object elem$1 = null;
        final .java.lang.Object array$5;
        int i$6 = 0;
        final int length$7;
        if (isArraySequence$4) {
            array$5 = ((.ceylon.language.ArraySequence)iterable$3).$getArray$();
            i$6 = ((.ceylon.language.ArraySequence)iterable$3).$getFirst$();
            length$7 = i$6 + ((.ceylon.language.ArraySequence)iterable$3).$getLength$();
        } else {
            array$5 = null;
            length$7 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> n$iterator$$2 = isArraySequence$4 ? null : iterable$3.iterator();
        while (isArraySequence$4 ? i$6 < length$7 : !((elem$1 = n$iterator$$2.next()) instanceof .ceylon.language.Finished)) {
            if (isArraySequence$4) elem$1 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$5, i$6++);
            final long n = ((.ceylon.language.Integer)elem$1).longValue();
        }
    }
    
    public final void f2(final long i) {
        (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$ns$8 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                f2(i, $ceylontmp$ns$8);
            }
            returning null;
        );
    }
    
    public final void f2(final long i, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> ns) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$11 = ns;
        final boolean isArraySequence$12 = iterable$11 instanceof .ceylon.language.ArraySequence;
        .java.lang.Object elem$9 = null;
        final .java.lang.Object array$13;
        int i$14 = 0;
        final int length$15;
        if (isArraySequence$12) {
            array$13 = ((.ceylon.language.ArraySequence)iterable$11).$getArray$();
            i$14 = ((.ceylon.language.ArraySequence)iterable$11).$getFirst$();
            length$15 = i$14 + ((.ceylon.language.ArraySequence)iterable$11).$getLength$();
        } else {
            array$13 = null;
            length$15 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> n$iterator$$10 = isArraySequence$12 ? null : iterable$11.iterator();
        while (isArraySequence$12 ? i$14 < length$15 : !((elem$9 = n$iterator$$10.next()) instanceof .ceylon.language.Finished)) {
            if (isArraySequence$12) elem$9 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$13, i$14++);
            final long n = ((.ceylon.language.Integer)elem$9).longValue();
        }
    }
    
    public final void f3() {
        (
            let
            {
                .ceylon.language.Sequential<? extends .java.lang.Object> $ceylontmp$os$16 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                f3($ceylontmp$os$16);
            }
            returning null;
        );
    }
    
    public final void f3(final .ceylon.language.Sequential<? extends .java.lang.Object> os) {
        final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> iterable$19 = os;
        final boolean isArraySequence$20 = iterable$19 instanceof .ceylon.language.ArraySequence;
        .java.lang.Object elem$17 = null;
        final .java.lang.Object array$21;
        int i$22 = 0;
        final int length$23;
        if (isArraySequence$20) {
            array$21 = ((.ceylon.language.ArraySequence)iterable$19).$getArray$();
            i$22 = ((.ceylon.language.ArraySequence)iterable$19).$getFirst$();
            length$23 = i$22 + ((.ceylon.language.ArraySequence)iterable$19).$getLength$();
        } else {
            array$21 = null;
            length$23 = 0;
        }
        .ceylon.language.Iterator<? extends .java.lang.Object> o$iterator$$18 = isArraySequence$20 ? null : iterable$19.iterator();
        while (isArraySequence$20 ? i$22 < length$23 : !((elem$17 = o$iterator$$18.next()) instanceof .ceylon.language.Finished)) {
            if (isArraySequence$20) elem$17 = .com.redhat.ceylon.compiler.java.Util.getObjectArray(array$21, i$22++);
            final .java.lang.Object o = (.java.lang.Object)elem$17;
        }
    }
    
    private final void m$priv$() {
        f1(.ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)}));
        f2(1L, .ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)}));
        f1();
        f2(1L);
        f1(new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Sequential<? extends .ceylon.language.Integer>>>>(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)}));
        f2(1L, new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Sequential<? extends .ceylon.language.Integer>>>(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)}));
        f3(.ceylon.language.ArraySequence.<.java.lang.Object>instance(.ceylon.language.Object.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)}));
        f3(.ceylon.language.ArraySequence.<.java.lang.Object>instance(.ceylon.language.Object.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.ArraySequence.<.ceylon.language.Integer>instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)})}));
        f3(new .ceylon.language.Tuple<.ceylon.language.Integer, .ceylon.language.Integer, .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Tuple<.ceylon.language.Integer, ? extends .ceylon.language.Integer, ? extends .ceylon.language.Sequential<? extends .ceylon.language.Integer>>>>(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)}));
        f3(.ceylon.language.ArraySequence.<.java.lang.Object>instance(.ceylon.language.Object.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.String.instance("foo"),
                .ceylon.language.Float.instance(5.0)}));
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.method.MethodWithVarargs();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.method.MethodWithVarargs.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.method.MethodWithVarargs.class);
}