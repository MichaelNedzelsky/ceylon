package com.redhat.ceylon.compiler.java.test.structure.concrete;

public interface MultipleInheritance<T> {
    
    public long getA();
    
    public void setA(final long a);
    
    public .java.lang.Object m();
}
public final class MultipleInheritance$impl {
    
    private MultipleInheritance$impl() {
    }
    
    public static final <T>long getA(final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance<T> $this, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        return 1L;
    }
    
    public static final <T>void setA(final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance<T> $this, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final long a) {
    }
    
    public static <T>.java.lang.Object m(final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance<T> $this, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        return null;
    }
    
    private static <T>void x$priv$(final .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance<T> $this, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.Object t) {
        if (.com.redhat.ceylon.compiler.java.Util.isReified(t, $reified$T)) {
        }
    }
}
class MultipleInheritanceImpl<A> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance<A> {
    
    MultipleInheritanceImpl(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$A) {
        this.$reified$A = $reified$A;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$A;
    
    @.java.lang.Override
    public long getA() {
        return .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.getA(this, $reified$A);
    }
    
    @.java.lang.Override
    public void setA(final long a) {
        .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.setA(this, $reified$A, a);
    }
    
    @.java.lang.Override
    public .java.lang.Object m() {
        return .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.m(this, $reified$A);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImpl(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImpl.class, $reified$A);
    }
}
interface MultipleInheritanceSub<B> extends .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance<B> {
}
final class MultipleInheritanceSub$impl {
    
    private MultipleInheritanceSub$impl() {
    }
}
class MultipleInheritanceSubImpl<C> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub<C> {
    
    MultipleInheritanceSubImpl(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$C) {
        this.$reified$C = $reified$C;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$C;
    
    @.java.lang.Override
    public long getA() {
        return .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.getA(this, $reified$C);
    }
    
    @.java.lang.Override
    public void setA(final long a) {
        .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.setA(this, $reified$C, a);
    }
    
    @.java.lang.Override
    public .java.lang.Object m() {
        return .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.m(this, $reified$C);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImpl(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImpl.class, $reified$C);
    }
}
class MultipleInheritanceImplSub<D> extends .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImpl<D> implements .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSub<D> {
    
    MultipleInheritanceImplSub(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$D) {
        super($reified$D);
        this.$reified$D = $reified$D;
        this.a = 1L;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$D;
    private long a;
    
    @.java.lang.Override
    public final long getA() {
        return a;
    }
    
    @.java.lang.Override
    public final void setA(final long a) {
        this.a = a;
    }
    
    @.java.lang.Override
    public final .java.lang.Object m() {
        .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.m(this, $reified$D);
        final long x = .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.getA(this, $reified$D);
        .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.setA(this, $reified$D, 0L);
        (
            let
            {
                long $ceylontmp$opV$3 = .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.getA(this, $reified$D) + getA();
                .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.setA(this, $reified$D, $ceylontmp$opV$3);
            }
            returning $ceylontmp$opV$3;
        );
        (
            let
            {
                long $ceylontmp$opV$5 = .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.getA(this, $reified$D);
                .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.setA(this, $reified$D, $ceylontmp$opV$5 + 1);
            }
            returning $ceylontmp$opV$5;
        );
        return null;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImplSub(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceImplSub.class, $reified$D);
    }
}
class MultipleInheritanceSubImplSub<E> extends .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImpl<E> implements .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance<E> {
    
    MultipleInheritanceSubImplSub(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$E) {
        super($reified$E);
        this.$reified$E = $reified$E;
        this.a = 1L;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$E;
    private long a;
    
    @.java.lang.Override
    public final long getA() {
        return a;
    }
    
    @.java.lang.Override
    public final void setA(final long a) {
        this.a = a;
    }
    
    @.java.lang.Override
    public final .java.lang.Object m() {
        .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.m(this, $reified$E);
        final long x = .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.getA(this, $reified$E);
        .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.setA(this, $reified$E, 0L);
        (
            let
            {
                long $ceylontmp$opV$7 = .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.getA(this, $reified$E) + getA();
                .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.setA(this, $reified$E, $ceylontmp$opV$7);
            }
            returning $ceylontmp$opV$7;
        );
        (
            let
            {
                long $ceylontmp$opV$9 = .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.getA(this, $reified$E);
                .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritance$impl.setA(this, $reified$E, $ceylontmp$opV$9 + 1);
            }
            returning $ceylontmp$opV$9;
        );
        return null;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImplSub(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.concrete.MultipleInheritanceSubImplSub.class, $reified$E);
    }
}